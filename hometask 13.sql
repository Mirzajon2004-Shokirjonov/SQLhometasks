use W3Resource
--1. From the following tables, write a SQL query to find all the orders issued by the salesman 'Paul Adam'. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
select * from Inventory.Orders
select * from Inventory.Salesman
select * from Inventory.Customer
select ord_no, purch_amt, ord_date, customer_id, salesman_id from Inventory.Orders
where salesman_id=(select salesman_id from Inventory.Salesman where name= 'Paul Adam')
--2. From the following tables write a SQL query to find all orders generated by London-based salespeople. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
select ord_no, purch_amt, ord_date, customer_id, salesman_id from Inventory.Orders
where salesman_id=(select salesman_id from Inventory.Salesman where city = 'London')
--3. From the following tables write a SQL query to find all orders generated by the salespeople who may work for customers whose id is 3007. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
select ord_no, purch_amt, ord_date, customer_id, salesman_id from Inventory.Orders
where salesman_id in (select salesman_id from Inventory.Orders where customer_id=3007)
--4. From the following tables write a SQL query to find the order values greater than the average order value of 10th October 2012. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
select ord_no, purch_amt, ord_date, customer_id, salesman_id from Inventory.Orders t1
where purch_amt >(select avg(purch_amt) from Inventory.Orders where ord_date ='2012-10-10')
--5. From the following tables, write a SQL query to find all the orders generated in New York city. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
select ord_no, purch_amt, ord_date, customer_id , salesman_id from Inventory.Orders
where salesman_id in ( select salesman_id from Inventory.Salesman where city='New York')
--6. From the following tables write a SQL query to determine the commission of the salespeople in Paris. Return commission.
select * from Inventory.Salesman
select * from Inventory.Customer
select commission from Inventory.Salesman
where salesman_id in (select salesman_id from Inventory.Salesman where city='Paris')
--7. Write a query to display all the customers whose ID is 2001 below the salesperson ID of Mc Lyon.
select cust_name from Inventory.Customer
where customer_id +2001=(select salesman_id from Inventory.Salesman where name= 'Mc Lyon')
--8. From the following tables write a SQL query to count the number of customers with grades above the average in New York City. Return grade and count. 
select city, grade,count(*) from Inventory.Customer
where grade > (select avg(grade) from Inventory.Customer
where city='New York') and city<> 'New York'
group by grade,city


select avg(grade) from Inventory.Customer
where city='New York'

--9. From the following tables, write a SQL query to find those salespeople who earned the maximum commission. Return ord_no, purch_amt, ord_date, and salesman_id.
select * from Inventory.Orders
select * from Inventory.Salesman
select ord_no, purch_amt, ord_date,salesman_id from Inventory.Orders
where salesman_id in ( select salesman_id from Inventory.Salesman where commission = (select max(commission) from Inventory.Salesman))
--10. From the following tables write SQL query to find the customers who placed orders on 17th August 2012. Return ord_no, purch_amt, ord_date, customer_id, salesman_id and cust_name.
select * from Inventory.Customer
select * from Inventory.Orders
select ord_no, purch_amt, ord_date, t2.customer_id, t1.salesman_id ,cust_name from Inventory.Customer t1
join Inventory.Orders t2 on t1.customer_id=t2.customer_id 
where ord_date ='2012-08-17'
--11. From the following tables write a SQL query to find salespeople who had more than one customer. Return salesman_id and name.
select * from Inventory.Salesman
select * from Inventory.Orders

select salesman_id,name from Inventory.Salesman
where salesman_id in ( select  salesman_id from Inventory.Customer  group by salesman_id having COUNT(salesman_id) >1)
--12. From the following tables write a SQL query to find those orders, which are higher than the average amount of the orders. Return ord_no, purch_amt, ord_date, customer_id and salesman_id
select ord_no, purch_amt, ord_date, customer_id, salesman_id from Inventory.Orders 
where purch_amt > (select avg(purch_amt) from Inventory.Orders )
--13. From the following tables write a SQL query to find those orders that are equal or higher than the average amount of the orders. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
select ord_no, purch_amt, ord_date, customer_id, salesman_id from Inventory.Orders t1
where purch_amt >= (select AVG(purch_amt) from Inventory.Orders where t1.customer_id= customer_id)


--14. Write a query to find the sums of the amounts from the orders table, grouped by date, and eliminate all dates where the sum was not at least 1000.00 above the maximum order amount for that date.
select ord_date,sum(purch_amt) from Inventory.Orders t1
group by ord_date
having sum(purch_amt)-1000>=(select max(purch_amt) from Inventory.Orders  where t1.ord_date =ord_date)
--15. Write a query to extract all data from the customer table if and only if one or more of the customers in the customer table are located in London
select cust_name,customer_id,city from Inventory.Customer
where exists (select * from inventory.Orders where city = 'London')
--16. From the following tables write a  SQL query to find salespeople who deal with multiple customers. Return salesman_id, name, city and commission.
select * from Inventory.Customer
select * from Inventory.Salesman
select * from Inventory.Salesman t1
where 1<(select count(salesman_id) from Inventory.Customer where t1.salesman_id=salesman_id)
--17. From the following tables write a SQL query to find salespeople who deal with a single customer. Return salesman_id, name, city and commission.
select * from Inventory.Customer

select * from Inventory.Salesman t1
where 1=(select count(salesman_id) from Inventory.Customer where t1.salesman_id=salesman_id)


select * from Inventory.Salesman t1
where salesman_id in  (select distinct(salesman_id) from Inventory.Customer t2 where not exists ( select salesman_id from Inventory.Customer where  
t2.cust_name <> cust_name and  t1.salesman_id=salesman_id ))
--18. From the following tables, write a SQL query to find the salespeople who deal the customers with more than one order. Return salesman_id, name, city and commission.
select * from Inventory.Orders
select * from Inventory.Salesman
select * from Inventory.Customer

select salesman_id, name, city,commission from Inventory.Salesman t2 
where salesman_id in ( select distinct( salesman_id) from Inventory.Orders t1 where exists (select salesman_id from Inventory.Customer where t2.salesman_id=salesman_id ))


select salesman_id, name, city,commission from Inventory.Salesman t1
where  1< ( select count(salesman_id) from Inventory.Orders where t1.salesman_id=salesman_id)

select * from Inventory.Salesman t1
where exists ( select customer_id from Inventory.Customer t2 where t1.salesman_id = t2.salesman_id and 1< ( select count(salesman_id) from Inventory.Orders 
where t2.customer_id=customer_id))
--19. From the following tables write a SQL query to find all salespeople who are located in any city where there is at least one customer. Return salesman_id, name, city and commission.
select * from Inventory.Salesman
select * from Inventory.Customer

select * from Inventory.Salesman t1
where exists ( select salesman_id from Inventory.Customer t2 where t1.salesman_id=t2.salesman_id and  1<=(select count(*) from Inventory.Salesman where t1.city=t2.city))

select * from Inventory.Salesman
where city = any(select city from Inventory.Customer)
--20. From the following tables write a SQL query to find salespeople whose place of residence matches any city where customers live. Return salesman_id, name, city and commission.
select * from Inventory.Salesman
where city = any(select city from Inventory.Customer)
--21. From the following tables write a SQL query to find all those salespeople whose names appear alphabetically lower than the customer’s name. Return salesman_id, name, city, commission.


select * from Inventory.Salesman
where name < any ( select cust_name from Inventory.Customer)


select * from Inventory.Salesman a
where exists (select cust_name from Inventory.Customer where a.name < cust_name)
--22. From the following table write a SQL query to find all those customers with a higher grade than all the customers alphabetically below the city of New York. Return customer_id, cust_name, city, grade, salesman_id.
select * from Inventory.Customer t2
where grade > any(select grade from Inventory.Customer t1 where t1.cust_name < any(select cust_name from Inventory.Customer  where city ='New York') ) 

select grade from Inventory.Customer t1 where t1.cust_name < any(select cust_name from Inventory.Customer  where city ='New York')
--23. From the following table write a SQL query to find all those orders whose order amount exceeds at least one of the orders placed on September 10th 2012. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
select * from Inventory.Orders
select * from Inventory.Customer

select * from Inventory.Orders
where purch_amt > any(select purch_amt from Inventory.Orders where ord_date='2012-09-10')
--24. From the following tables write a SQL query to find orders where the order amount is less than the order amount of a customer residing in London City. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
select * from Inventory.Orders 
where purch_amt < any(select purch_amt from Inventory.Orders t2 ,Inventory.Customer t1 where t1.customer_id = t2.customer_id and  city='London')
--25. From the following tables write a SQL query to find those orders where every order amount is less than the maximum order amount of a customer who lives in London City. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
select * from Inventory.Orders
where purch_amt < (select max(purch_amt) from Inventory.Orders t1,Inventory.Customer t2 where t1.customer_id=t2.customer_id and city = 'London')
--26. From the following tables write a SQL query to find those customers whose grades are higher than those living in New York City. Return customer_id, cust_name, city, grade and salesman_id.
select * from Inventory.Customer
where grade > all(select grade from Inventory.Customer where city='New York')
--27. From the following tables write a SQL query to calculate the total order amount generated by a salesperson. Salespersons should be from the cities where the customers reside. Return salesperson name, city and total order amount.
select name,a.city,sum(purch_amt) from Inventory.Salesman a,Inventory.Orders b,Inventory.Customer c
where a.city in  (select city from Inventory.Customer d where d.city=a.city)
group by name,a.city
---28. From the following tables write a  SQL query to find those customers whose grades are not the same as those who live in London City. Return customer_id, cust_name, city, grade and salesman_id.
select * from Inventory.Customer
where grade <> any (select grade from Inventory.Customer where city='london')
--29. From the following tables write a  SQL query to find those customers whose grades are different from those living in Paris. Return customer_id, cust_name, city, grade and salesman_id.
select * from Inventory.Customer
where grade <>(select grade from Inventory.Customer where city ='Paris')
--30. From the following tables write a SQL query to find all those customers who have different grades than any customer who lives in Dallas City. Return customer_id, cust_name,city, grade and salesman_id.
select * from Inventory.Customer
where grade <> all(select grade from Inventory.Customer where city='Dallas')
--31. From the following tables write a SQL query to calculate the average price of each manufacturer's product along with their name. Return Average Price and Company.
select * from item_mast
select * from emp_details



 